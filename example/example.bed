[includes]
"example/templates"

[output]
"example/builds"

[globals]
variable_1 = [
    ("1", output="property"),
    ("2", output="property2\""),
    ("3", output="property3"),
];

variable_2 = [
    ("1", output="property"),
    ("2", output="property2"),
];

variable_3 = [
    1, 2, 3, 4
];

variable_4 = [
    ("test1", value=11),
    ("test2", value=12),
    ("test3", value=13),
    ("test4", value=14),
];

[template.pilot]
value = [variable_1[0].name];
value = [variable_1[variable_3[variable_3[2]]]];
value2 = [variable_1];
for (a, b, c) in (variable_1, variable_2, variable_3) {
    test = some/path/ + [a] + .json;
    test2 = [b.output];
    test3 = [c];
    yield (build("test.j2", [a]+[b.output]+[c] + .json), output=[a]+_+[b]+_+[c]);
}

[commands]
limit 2;
value = [variable_2[1].hello];
string_idx = "test" + [variable_3[1]];
string_value = [variable_4[string_idx].value];

for (a, b, c) in (variable_1, -3..5, input_arg) {
    test = [a.output];
    test2 = [b.output];
    value = [c.test];

    for (zeta, beta, c_value, str_val) in (variable_3, variable_2, value, string_value) {
        spawn 
            stdout(example/out/ + [test] + .json)
            ./target/release/test-bed
            a [a]
            b [b]
            zeta [zeta]
            ;
    }
}

append_var = "Start:";
append_list = [[append_var]];

for a in variable_1 {
    append_var := [append_var] + [a] + ":";
    append_list.push([append_var]);
}

for appended in append_list {
    sleep 250;
}



if_test1 = "false";

if if_test1 {
    for if_test1_failure in variable_1 {
        sleep 1000;
    }
}

if missing_variable {
    for missing_var in variable_4 {
        sleep 1000;
    }
}

if_test2 = "anything";

if if_test2 {
    for success in variable_4 {
        sleep 100;
        spawn ./nothing;
    }
}

if_test3 = (
    "some_name",
    field1="somevalue",
);

if if_test3.field1 {
    for if_test3_field in variable_4 {
        sleep 100;
        spawn ./nothing;
    }
}