WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* ~ "\n" }

parameters = {
    "[params]"
    ~
    parameter*
}

parameter = {
    ident
    ~
    "="
    ~
    param_array
}

param_array = {
    ("[" ~ "]") | 
    ("[" ~ string ~ ("," ~ string)* ~ (",")? ~ "]")
}

commands = {
    "[commands]"
    ~
    (expr)*
}

expr = {
    command | for_loop
}

for_loop = {
    "for"
    ~
    ident
    ~
    "in"
    ~
    ident
    ~
    "{"
    ~
    (expr)*
    ~
    "}"
}

command = {
    (kill | spawn | sleep | wait_for | wait_all) ~ ";"
}

kill = {
    "kill" ~ integer
}

spawn = {
    "spawn"
    ~
    integer
    ~
    stdout_map?
    ~
    stderr_map?
    ~
    program
    ~
    (arg)*
}

program = { inner }

arg = ${
    pid | templated_arg
}

pid = ${ "pid(" ~ integer ~ ")" }

templated_arg = ${
    (arg_text | template)+
}

arg_text = @{ arg_char+ }

arg_char = {
    !(WHITESPACE | "[" | ";" | "]" | "(" | ")") ~ ANY
}

template = {
    "["
    ~
    ident
    ~
    "::"
    ~
    ident
    ~
    "]"
}

stderr_map = ${
    "--stderr="
    ~
    output_map
}

stdout_map = ${
    "--stdout="
    ~
    output_map
}

output_map = ${
    append |
    print |
    arg
}

append = ${
    "append(" ~ arg ~ ")"
}

print = { "print" }

sleep = {
    "sleep" ~ integer
}

wait_for = {
    "wait_for" ~ integer ~ (integer ~ integer)?
}

wait_all = {
    "wait_all" ~ (integer ~ integer)?
}

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | WHITESPACE) ~ ANY
}

ident = @{ letter ~ (letter | ('0'..'9'))* }
letter = { ('a'..'z') | ('A'..'Z') }
integer = @{ ('0'..'9')+ } 

test_bed = _{ 
    SOI 
    ~  
    (parameters)?
    ~
    (commands)
    ~ 
    EOI 
}